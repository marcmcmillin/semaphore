---
- name: View Containers in All Docker Networks (Alternative Approach)
  hosts: docker
  collections:
    - community.docker
  gather_facts: false
  tasks:
    - name: Get all Docker networks (names only)
      community.docker.docker_network:
        list: true
        names_only: true
      register: all_network_names

    - name: Debug - Print all_network_names
      debug:
        var: all_network_names

    - name: Get details for each network and its containers
      community.docker.docker_network_info:
        name: "{{ item }}"
      register: network_details
      loop: "{{ all_network_names.networks | default([]) }}"
      ignore_errors: yes

    - name: Debug - Print network_details variable (alternative)
      debug:
        var: network_details

    - name: Debug - Print individual network details results (alternative)
      debug:
        msg: "network_details.results[{{ item.index }}]: {{ item }}"
      loop: "{{ network_details.results | default([]) }}"

    - name: Display containers in each network
      debug:
        msg: "Network: {{ network_details.results[loop.index].network.Name }}"
      loop: "{{ all_network_names.networks | default([]) }}"
      when:
        - network_details.results is defined
        - network_details.results | length > 0
        - network_details.results[loop.index].network is defined
        - network_details.results[loop.index].network.Name is defined

    - name: Display container details
      debug:
        msg: "  Containers: {{ network_details.results[loop.index].network.Containers | dict2items }}"
      loop: "{{ all_network_names.networks | default([]) }}"
      when:
        - network_details.results is defined
        - network_details.results | length > 0
        - network_details.results[loop.index].network is defined
        - network_details.results[loop.index].network.Containers is defined
        - network_details.results[loop.index].network.Containers | length > 0
